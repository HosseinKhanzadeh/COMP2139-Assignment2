@model InventoryManagement.Models.Order

@{
    ViewData["Title"] = "Create Order";
}

<h2>Create Order</h2>

<form asp-controller="Orders" asp-action="Create" method="post">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    
    <div class="form-group">
        <label asp-for="GuestName" class="control-label"></label>
        <input asp-for="GuestName" class="form-control" required />
        <span asp-validation-for="GuestName" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="GuestEmail" class="control-label"></label>
        <input asp-for="GuestEmail" type="email" class="form-control" required />
        <span asp-validation-for="GuestEmail" class="text-danger"></span>
    </div>

    <h3>Select Products</h3>
    <table class="table">
        <thead>
            <tr>
                <th>Product</th>
                <th>Price</th>
                <th>Quantity</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in ViewBag.Products)
            {
                <tr>
                    <td>
                        <input type="checkbox" name="ProductIds" value="@product.Id" />
                        @product.Name
                    </td>
                    <td>@product.Price.ToString("C")</td>
                    <td>
                        <input type="number" name="Quantities" value="1" min="1" class="form-control" />
                        <input type="hidden" name="Prices" value="@product.Price" />
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <button type="submit" class="btn btn-primary">Submit Order</button>
    <a asp-action="Index" class="btn btn-secondary">Cancel</a>
</form>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
